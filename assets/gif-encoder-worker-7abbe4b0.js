(function(){"use strict";(async()=>{self.document={currentScript:{src:location.origin+"/jumping-peter/_app/immutable/workers/"}};var U=""+new URL("assets/gif_encoder_bg-5d4c544b.wasm",document.currentScript&&document.currentScript.src||new URL("assets/gif-encoder-worker-7abbe4b0.js",document.baseURI).href).href,F=async(t={},e)=>{let n;if(e.startsWith("data:")){const r=e.replace(/^data:.*?base64,/,"");let o;if(typeof Buffer=="function"&&typeof Buffer.from=="function")o=Buffer.from(r,"base64");else if(typeof atob=="function"){const s=atob(r);o=new Uint8Array(s.length);for(let i=0;i<s.length;i++)o[i]=s.charCodeAt(i)}else throw new Error("Cannot decode base64-encoded data URL");n=await WebAssembly.instantiate(o,t)}else{const r=await fetch(e),o=r.headers.get("Content-Type")||"";if("instantiateStreaming"in WebAssembly&&o.startsWith("application/wasm"))n=await WebAssembly.instantiateStreaming(r,t);else{const s=await r.arrayBuffer();n=await WebAssembly.instantiate(s,t)}}return n.instance.exports};let a;function M(t){a=t}const R=typeof TextDecoder>"u"?(0,module.require)("util").TextDecoder:TextDecoder;let h=new R("utf-8",{ignoreBOM:!0,fatal:!0});h.decode();let g=null;function y(){return(g===null||g.byteLength===0)&&(g=new Uint8Array(a.memory.buffer)),g}function k(t,e){return h.decode(y().subarray(t,t+e))}const _=new Array(128).fill(void 0);_.push(void 0,null,!0,!1);let u=_.length;function v(t){u===_.length&&_.push(_.length+1);const e=u;return u=_[e],_[e]=t,e}let w=null;function c(){return(w===null||w.byteLength===0)&&(w=new Int32Array(a.memory.buffer)),w}function L(t){return _[t]}function S(t){t<132||(_[t]=u,u=t)}function m(t){const e=L(t);return S(t),e}let A=0;function B(t,e){const n=e(t.length*1);return y().set(t,n/1),A=t.length,n}function W(t,e){return y().subarray(t/1,t/1+e)}class b{static __wrap(e){const n=Object.create(b.prototype);return n.ptr=e,n}__destroy_into_raw(){const e=this.ptr;return this.ptr=0,e}free(){const e=this.__destroy_into_raw();a.__wbg_gifencoder_free(e)}static new(e,n,r,o){try{const p=a.__wbindgen_add_to_stack_pointer(-16);a.gifencoder_new(p,e,n,r,o);var s=c()[p/4+0],i=c()[p/4+1],d=c()[p/4+2];if(d)throw m(i);return b.__wrap(s)}finally{a.__wbindgen_add_to_stack_pointer(16)}}add_frame(e){try{const o=a.__wbindgen_add_to_stack_pointer(-16),s=B(e,a.__wbindgen_malloc),i=A;a.gifencoder_add_frame(o,this.ptr,s,i);var n=c()[o/4+0],r=c()[o/4+1];if(r)throw m(n)}finally{a.__wbindgen_add_to_stack_pointer(16)}}get_result(){try{const i=this.__destroy_into_raw(),d=a.__wbindgen_add_to_stack_pointer(-16);a.gifencoder_get_result(d,i);var e=c()[d/4+0],n=c()[d/4+1],r=c()[d/4+2],o=c()[d/4+3];if(o)throw m(r);var s=W(e,n).slice();return a.__wbindgen_free(e,n*1),s}finally{a.__wbindgen_add_to_stack_pointer(16)}}}function j(t,e){const n=k(t,e);return v(n)}function T(t,e){throw new Error(k(t,e))}URL=globalThis.URL;const l=await F({"./gif_encoder_bg.js":{__wbindgen_string_new:j,__wbindgen_throw:T}},U),x=l.memory,z=l.__wbg_gifencoder_free,D=l.gifencoder_new,O=l.gifencoder_add_frame,q=l.gifencoder_get_result,C=l.__wbindgen_add_to_stack_pointer,I=l.__wbindgen_malloc,N=l.__wbindgen_free;var E=Object.freeze({__proto__:null,__wbg_gifencoder_free:z,__wbindgen_add_to_stack_pointer:C,__wbindgen_free:N,__wbindgen_malloc:I,gifencoder_add_frame:O,gifencoder_get_result:q,gifencoder_new:D,memory:x});M(E);let f=null;self.onmessage=t=>{const e=t.data;switch(e.type){case"Init":J(e);break;case"AddFrame":$(e);break;case"GetResult":G();break;default:(n=>{const r={type:"Failure",error:`Unknown request: ${JSON.stringify(e)}`};self.postMessage(r)})()}};function J(t){if(f){const s={type:"Failure",error:"Already initialized"};self.postMessage(s);return}const{width:e,height:n,delayMs:r,quality:o}=t;f=b.new(e,n,r,o)}function $(t){if(!f){const n={type:"Failure",error:"Not initialized"};self.postMessage(n);return}f.add_frame(new Uint8Array(t.buffer));const e={type:"FrameAdded"};self.postMessage(e)}function G(t){if(!f){const r={type:"Failure",error:"Not initialized"};self.postMessage(r);return}const e=f.get_result(),n=new FileReader;n.onload=()=>{if(n.onload=null,n.onerror=null,!n.result){const o={type:"Failure",error:"Failed to read the bytes"};self.postMessage(o);return}const r={type:"Success",dataUri:"data:image/gif;base64,"+n.result.split(",",2)[1]};self.postMessage(r)},n.onerror=()=>{n.onload=null,n.onerror=null;const r={type:"Failure",error:"Failed to read the bytes"};self.postMessage(r)},n.readAsDataURL(new Blob([e]))}const H={type:"Ready"};self.postMessage(H)})()})();
